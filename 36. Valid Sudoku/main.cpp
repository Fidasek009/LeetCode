#include <iostream>
#include <vector>
#include <unordered_set>

using namespace std;

class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        bool row[9][9] = {0}, col[9][9] = {0}, box[9][9] = {0};

        for(int i = 0; i < 9; i++){
            for(int j = 0; j < 9; j++){
                if(board[i][j] != '.'){
                    int n = board[i][j] - '1', k = i/3*3+j/3;
                    if(row[i][n] || col[j][n] || box[k][n]) return 0;
                    else row[i][n] = col[j][n] = box[k][n] = 1;
                }
            }
        }

        return 1;
    }
};

int main()
{
    // vector<vector<char>> a = {{'5','3','.','.','7','.','.','.','.'}
    //                          ,{'6','.','.','1','9','5','.','.','.'}
    //                          ,{'.','9','8','.','.','.','.','6','.'}
    //                          ,{'8','.','.','.','6','.','.','.','3'}
    //                          ,{'4','.','.','8','.','3','.','.','1'}
    //                          ,{'7','.','.','.','2','.','.','.','6'}
    //                          ,{'.','6','.','.','.','.','2','8','.'}
    //                          ,{'.','.','.','4','1','9','.','.','5'}
    //                          ,{'.','.','.','.','8','.','.','7','9'}};

    vector<vector<char>> a = {{'8','3','.','.','7','.','.','.','.'}
                             ,{'6','.','.','1','9','5','.','.','.'}
                             ,{'.','9','8','.','.','.','.','6','.'}
                             ,{'8','.','.','.','6','.','.','.','3'}
                             ,{'4','.','.','8','.','3','.','.','1'}
                             ,{'7','.','.','.','2','.','.','.','6'}
                             ,{'.','6','.','.','.','.','2','8','.'}
                             ,{'.','.','.','4','1','9','.','.','5'}
                             ,{'.','.','.','.','8','.','.','7','9'}};

    Solution s = Solution();
    auto res = s.isValidSudoku(a);
    cout << res;
    return 0;
}